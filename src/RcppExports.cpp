// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// check__
NumericVector check__(List cqpotList_);
RcppExport SEXP _gRain_check__(SEXP cqpotList_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type cqpotList_(cqpotList_SEXP);
    rcpp_result_gen = Rcpp::wrap(check__(cqpotList_));
    return rcpp_result_gen;
END_RCPP
}
// propagateLS__
List propagateLS__(List cqpotList_, List rip);
RcppExport SEXP _gRain_propagateLS__(SEXP cqpotList_SEXP, SEXP ripSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type cqpotList_(cqpotList_SEXP);
    Rcpp::traits::input_parameter< List >::type rip(ripSEXP);
    rcpp_result_gen = Rcpp::wrap(propagateLS__(cqpotList_, rip));
    return rcpp_result_gen;
END_RCPP
}
// sparse_setXtf1
SEXP sparse_setXtf1(SEXP XX_, SEXP TF_);
RcppExport SEXP _gRain_sparse_setXtf1(SEXP XX_SEXP, SEXP TF_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type XX_(XX_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type TF_(TF_SEXP);
    rcpp_result_gen = Rcpp::wrap(sparse_setXtf1(XX_, TF_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gRain_check__", (DL_FUNC) &_gRain_check__, 1},
    {"_gRain_propagateLS__", (DL_FUNC) &_gRain_propagateLS__, 2},
    {"_gRain_sparse_setXtf1", (DL_FUNC) &_gRain_sparse_setXtf1, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_gRain(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
